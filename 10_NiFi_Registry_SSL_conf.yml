- set_fact:
    general_configpy_args: "--host={{ inventory_hostname|lower }} --port=8443 --protocol=https --action=set --cluster={{ hostvars[inventory_hostname].cluster_name }} --user={{ ambari_admin_user }} --password={{ ambari_admin_password }} --unsafe"
  when: "'AMBARI_SERVER' in group_names"

- name: "Configure SSL for Kafka"
  shell: "/var/lib/ambari-server/resources/scripts/configs.py {{ general_configpy_args }} --config-type=nifi-registry-ambari-ssl-config --key={{ item.key }} --value={{ item.value }} --version-note={{ item.key }}"
  with_items:
    - { key: "nifi.registry.security.keystore", value: "/etc/security/serverKeys/jks/nifi_keystore.jks" } 
    - { key: "nifi.registry.security.keystorePasswd", value: "{{ security_password }}" } 
    - { key: "nifi.registry.security.keystoreType", value: "jks" } 
    - { key: "nifi.registry.security.truststore", value: "/etc/security/serverKeys/jks/nifi_truststore.jks" } 
    - { key: "nifi.registry.security.truststorePasswd", value: "{{ security_password }}" } 
    - { key: "nifi.registry.security.truststoreType", value: "jks" } 
    - { key: "nifi.registry.ssl.isenabled", value: "true" } 
  when: "'AMBARI_SERVER' in group_names"

- name: "Restart all services with stale configuration"
  uri:
    url: https://{{ inventory_hostname }}:8443/api/v1/clusters/{{ hostvars[inventory_hostname].cluster_name }}/requests
    method: POST
    validate_certs: no
    force_basic_auth: yes
    user: "{{ ambari_admin_user }}"
    password: "{{ ambari_admin_password }}"
    headers: '{"X-Requested-By":"ambari", "Content-Type":"text/plain"}'
    body: {"RequestInfo":{"context":"Restart all services with stale configuration via REST","operational_level": "host_component","command": "RESTART"},"Requests/resource_filters": [{"hosts_predicate": "HostRoles/stale_configs=true&HostRoles/cluster_name={{ hostvars[inventory_hostname].cluster_name }}"}]}
    body_format: json
    timeout: 120
    return_content: yes
    status_code: 200,201,202
  register: returned_from_cluster
  until: returned_from_cluster.status == 202
  retries: 300
  delay: 1
  when: "'AMBARI_SERVER' in group_names"

- name: "Waiting for all services will restart"
  uri:
    url: "{{ returned_from_cluster.json.href }}"
    validate_certs: no
    force_basic_auth: yes
    user: "{{ ambari_admin_user }}"
    password: "{{ ambari_admin_password }}"
    headers: '{"X-Requested-By":"ambari", "Content-Type":"application/json"}'
    status_code: 200,201,202
    return_content: yes
  register: cluster_check_task
  until: (((cluster_check_task.content|from_json).Requests.request_status == 'COMPLETED' and (cluster_check_task.content|from_json).Requests.completed_task_count|int > 0))
  retries: 600
  delay: 1
  when: "'AMBARI_SERVER' in group_names"
