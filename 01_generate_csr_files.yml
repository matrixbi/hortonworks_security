- name: Create a new folder to save the csr & keystore files
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /home/dba/ssl/csr
    - /home/dba/ssl/certs
    - /home/dba/ssl/jks

#- name: Create csr file and send it to ansible server
#  hosts: WHOLE-CLUSTER-ANSIBLE-GROUP
#  become: yes
#  tasks:
#  - name: Create a new folder to save the csr & keystore files
#    file:
#      path: "{{ item }}"
#      state: directory
#      mode: 0755
#    with_items:
#      - /etc/security/serverKeys/jks
#      - /etc/security/serverKeys/csr
#      - /etc/security/serverKeys/certs
#
#  - name: Create Keystore (contain the private key with alias)
#    shell: keytool -genkeypair -keystore /etc/security/serverKeys/jks/$(hostname -f)-keystore.jks -storepass {{ security_password }} -alias $(hostname -f) -keypass {{ security_password }} -dname "CN=$(hostname -f)" -keyalg RSA -validity 3650 -keysize 2048
#
#  - name: Generate the CSR files (The CSR contains the matching public key and other information like your organization's name)
#    shell: keytool -certreq -keystore /etc/security/serverKeys/jks/$(hostname -f)-keystore.jks -storepass {{ security_password }} -alias $(hostname -f) -file /etc/security/serverKeys/csr/$(hostname -f).csr -ext "san=dns:$(hostname -f),dns:$(hostname)"
#
#  - name: set variable
#    shell: echo $(hostname -f)
#    register: hostname_fqdn
#
#  - name: Get csr files to ansible server
#    fetch:
#      src: "{{ item.src }}"
#      dest: "{{ item.dest }}"
#      flat: yes
#    with_items:
#      - { src: '/etc/security/serverKeys/csr/{{ hostname_fqdn.stdout }}.csr', dest: '/home/dba/ssl/csr/' }
#      - { src: '/etc/security/serverKeys/jks/{{ hostname_fqdn.stdout }}-keystore.jks', dest: '/home/dba/ssl/jks/' }
